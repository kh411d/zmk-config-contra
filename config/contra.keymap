/*
 * Copyright (c) 2021 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

#define DEFAULT     0
#define SML_MODS    1
#define NUM_MODS    2
#define BT_CTRL     3
#define FW_CTRL     4

&mt {
    tapping-term-ms = <175>;
};

/ {
    behaviors {
        dqenter: dqt_enter {
            compatible = "zmk,behavior-mod-morph";
            label = "DQT_ENTER";
            #binding-cells = <0>;
            bindings = <&kp ENTER>, <&kp DQT>;
            mods = <MOD_LSFT>;
        };
        tldesc: tilde_escape {
                        compatible = "zmk,behavior-mod-morph";
                        label = "TILDE_ESCAPE";
                        #binding-cells = <0>;
                        bindings = <&kp ESC>, <&kp TILDE>;
                        mods = <(MOD_LSFT|MOD_RGUI)>;
                };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
    &kp TAB       &kp Q        &kp W    &kp E     &kp R     &kp T        &kp Y      &kp U    &kp I          &kp O          &kp P     &kp BSPC
    &mt LCTRL ESC &kp A        &kp S    &kp D     &kp F     &kp G        &kp H      &kp J    &kp K          &kp L          &kp SEMI  &dqenter
    &kp LSHFT     &kp Z        &kp X    &kp C     &kp V     &kp B        &kp N      &kp M    &kp COMMA      &kp DOT        &kp FSLH  &mt RSHFT BSLH
    &kp CAPS      &mo BT_CTRL  &kp LALT &kp LGUI  &mo 1     &lt 4 SPACE  &trans     &mo 2    &mt RGUI LEFT  &mt RALT DOWN  &kp UP    &mt RCTRL RIGHT
            >;
        };

        sml_mods {
            bindings = <
    &kp TILDE  &kp EXCL   &kp AT     &kp HASH   &kp DLLR      &kp PRCNT  &kp CARET     &kp AMPS    &kp ASTRK  &kp LPAR   &kp RPAR       &trans
    &trans     &kp F1     &kp F2     &kp F3     &kp F4        &kp F5     &kp F6        &kp UNDER   &kp PLUS   &kp LBRC   &kp RBRC       &kp DQT
    &trans     &kp F7     &kp F8     &kp F9     &kp F10       &kp F11    &kp F12       &kp MINUS   &kp LT     &kp GT     &kp QMARK      &mt RSHFT PIPE
    &trans     &trans     &trans     &trans     &trans        &trans     &trans        &mo BT_CTRL &trans     &trans     &trans         &trans
            >;
        };

        num_mods {
            bindings = <
    &kp GRAVE  &kp N1   &kp N2   &kp N3   &kp N4            &kp N5     &kp N6       &kp N7       &kp N8     &kp N9    &kp N0         &trans
    &trans     &kp F1   &kp F2   &kp F3   &kp F4            &kp F5     &kp F6       &kp MINUS    &kp EQUAL  &kp LBKT  &kp RBKT       &kp SQT
    &trans     &kp F7   &kp F8   &kp F9   &kp F10           &kp F11    &kp F12      &kp PLUS     &kp LT     &kp GT    &kp COLON       &mt RSHFT PIPE
    &trans     &trans   &trans   &trans   &mo BT_CTRL       &trans     &trans       &trans       &trans     &trans    &trans         &trans
            >;
        };

        bt_control {
            bindings = <
    &bt BT_CLR   &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3   &bt BT_SEL 4   &none   &none   &none   &none  &none  &none
    &none        &none         &none         &none         &none          &none          &none   &none   &none   &none  &none  &none
    &none        &none         &none         &none         &none          &bootloader    &none   &none   &none   &none  &none  &none
    &none        &none         &none         &none         &trans         &trans         &none   &none   &none   &none  &none  &none
            >;
        };
        
        game_layer_fn {
                        bindings = <
   &kp ESC   &kp F1    &kp F2    &kp F3    &kp F4      &kp F5       &kp C_PP  &kp C_VOL_DN  &kp C_VOL_UP  &kp C_NEXT  &none    &kp BSPC
   &kp LCTRL &kp N1    &kp N2    &kp N3    &kp N4      &kp N5       &kp LEFT  &kp DOWN      &kp UP        &kp RIGHT   &none    &kp ENTER
   &kp LSHFT &kp LALT  &kp Z     &kp X     &kp C       &kp V        &kp HOME  &kp LEFT      &kp DOWN      &kp RIGHT   &kp END  &kp RSHFT
   &none     &none     &none     &none     &kp SPACE   &lt 5 SPACE  &trans    &kp SPACE     &none         &none       &none    &kp RCTRL                  
                        >;
                };
    };
};
